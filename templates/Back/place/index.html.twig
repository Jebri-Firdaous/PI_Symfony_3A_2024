{% extends 'Back/base.html.twig' %}

{# {% block sideBar %}
<nav id="sidebar" class="sidebar js-sidebar">
    <div class="sidebar-content js-simplebar">
        <a class="sidebar-brand" href="index.html">
            <span class="align-middle">AdminKit</span>
          </a>
          
                  <ul class="sidebar-nav">
                      <li class="sidebar-header">
                          Pages
                      </li>
          
                      <li class="sidebar-item">
                          <a class="sidebar-link" href="index.html">
                <i class="align-middle" data-feather="sliders"></i> <span class="align-middle">Dashboard</span>
              </a>
                      </li>
          
                      <li class="sidebar-item active">
                          <a class="sidebar-link" href="{{path('app_parkingB')}}">
                <i class="align-middle" data-feather="car"></i> <span class="align-middle">Parking</span>
              </a>
                      </li>

                      <li class="sidebar-item">
                          <a class="sidebar-link" href="{{path('app_parking_stat')}}">
                <i class="align-middle" data-feather="stat"></i> <span class="align-middle">Statistic</span>
              </a>
                      </li>
          
                      <li class="sidebar-item">
                          <a class="sidebar-link" href="{{path('app_parking_recy')}}">
                <i class="align-middle" data-feather="stat"></i> <span class="align-middle">Recycle</span>
              </a>
                      </li>
                  </ul>
    </div>
</nav>
{% endblock %} #}

{% block main %}
<br><h1>
    <a href="{{  path('app_parking_show', {'idParking': idP}) }}" class="btn" style ="width: 50px;"><i class="fas fa-arrow-left fa-2x"></i></a>
    Liste des Places ( <a href="{{ path('app_place_new', {'idP': idP}) }}"><i class="fas fa-plus"></i></a> )
</h1><br>
<div style="display: grid; grid-template-columns: 1fr 1fr;">
    <!-- Add the radio button to toggle the visibility of the filter combo box -->
    <div>
        <input type="radio" id="toggleFilter1" name="filterVisibility" checked>
        <label for="toggleFilter1">Etat</label>
        <select id="etatFilter">
            <option value=""><----------></option>
            {% for etat in ['Libre', 'Reservée'] %}
                <option value="{{ etat }}">{{ etat }}</option>
            {% endfor %}
        </select>
    </div>

    <div>
        <input type="radio" id="toggleFilter2" name="filterVisibility">
        <label for="toggleFilter2">Type</label>
        <!-- Add the filter combo box -->
        <select id="typeFilter">
            <option value=""> <----------> </option>
            {% for etat in ['Voiture', 'Handicap', 'Camion'] %}
                <option value="{{ etat }}">{{ etat }}</option>
            {% endfor %}
        </select>
    </div>
</div>

    <table class="table" style="text-align: center;">
        <thead>
            <tr>
                {# <th>RefPlace</th> #}
                <th>Numéro<button class="sort-button" data-sort-by="numero">Trier par numéro</button></th>
                <th>Type<button class="sort-button" data-sort-by="type">Trier par type</button></th>
                <th>Etat<button class="sort-button" data-sort-by="etat">Trier par état</button></th>
                {# <th>actions</th> #}
            </tr>
        </thead>
        <tbody>
        {% for place in places %}
            <tr>
                {# <td>{{ place.refPlace }}</td> #}
                <td>{{ place.numPlace }}</td>
                <td>{{ place.typePlace }}</td>
                <td>{{ place.etat }}</td>
                <td>
                    <span style="display: inline-block; margin-right: 10px; margin-left: 10px;">
                    
                    </span>
                        <a href="{{ path('app_place_edit', {'refPlace': place.refPlace, 'idP': idP}) }}"><i class="fas fa-pencil-alt fa-x3"></i></a>
                    <span style="display: inline-block; margin-right: 10px; margin-left: 10px;">
                        {{ include('Back/place/_delete_form.html.twig') }}
                    </span>
                    {# <a href="{{ path('app_place_show', {'refPlace': place.refPlace, 'idP': idP}) }}">show</a> #}
                    
                    
                    {# <form action="{{ path('app_place_reserve', {'idP': idP, 'refP': place.refplace}) }}" method="POST">
                        {{ form_start(form1) }}
                        {{ form_widget(form1) }}
                        <button type="submit">Submit</button>
                        {{ form_end(form1) }}
                    </form> #}
                    
                    <a href="{{ path('app_place_reserve', {'idP': idP, 'refP': place.refplace}) }}" class="btn btn-primary">réserver</a>

                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="5">Il n'y a pas des places</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    {{ knp_pagination_render(places) }}

    {# <a href="{{ path('app_place_new', {'idP': idP}) }}">Create new</a> #}
<script>
        document.addEventListener('DOMContentLoaded', function() {
            const sortButtons = document.querySelectorAll('.sort-button');
            const sortableList = document.querySelector('.table tbody');
            let ascendingOrder = true;

            sortButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const sortBy = this.dataset.sortBy;
                    const items = Array.from(sortableList.children);

                    items.sort((a, b) => {
                        const valueA = a.querySelector('td:nth-child(' + (['numero', 'type', 'etat'].indexOf(sortBy) + 1) + ')').textContent;
                        const valueB = b.querySelector('td:nth-child(' + (['numero', 'type', 'etat'].indexOf(sortBy) + 1) + ')').textContent;

                        if (ascendingOrder) {
                            return valueA.localeCompare(valueB);
                        } else {
                            return valueB.localeCompare(valueA);
                        }
                    });

                    ascendingOrder = !ascendingOrder;

                    // Remove existing items
                    while (sortableList.firstChild) {
                        sortableList.removeChild(sortableList.firstChild);
                    }

                    // Append sorted items
                    items.forEach(item => sortableList.appendChild(item));
                });
            });
            
            // Filter combo box event listener
            const etatFilter = document.getElementById('etatFilter');
            etatFilter.addEventListener('change', function() {
                const selectedEtat = this.value;
                const rows = document.querySelectorAll('.table tbody tr');

                rows.forEach(row => {
                    const etat = row.querySelector('td:nth-child(3)').textContent;
                    if (!selectedEtat || etat === selectedEtat) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
            
            // Filter combo box event listener
            const typeFilter = document.getElementById('typeFilter');
            typeFilter.addEventListener('change', function() {
                const selectedType = this.value;
                const rows = document.querySelectorAll('.table tbody tr');

                rows.forEach(row => {
                    const type = row.querySelector('td:nth-child(2)').textContent;
                    if (!selectedType || type === selectedType) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
                
            const toggleFilter1 = document.getElementById('toggleFilter1');
            const toggleFilter2 = document.getElementById('toggleFilter2');
            const rows = document.querySelectorAll('.table tbody tr');

            // Initially hide the combo box
            // etatFilter.style.display = 'none';
            typeFilter.style.display = 'none';

            // Toggle visibility of the combo box when the radio button is clicked
            toggleFilter1.addEventListener('change', function() {
                if (this.checked) {
                    // toggleFilter.checked = false;
                    etatFilter.style.display = '';
                    typeFilter.style.display = 'none';
                    etatFilter.selectedIndex = 0;
                    rows.forEach(row => {
                        row.style.display = '';
                    });
                }
            });
            toggleFilter2.addEventListener('change', function() {
                if (this.checked) {
                    // toggleFilter.checked = false;
                    typeFilter.style.display = '';
                    etatFilter.style.display = 'none';
                    typeFilter.selectedIndex = 0;
                    rows.forEach(row => {
                        row.style.display = '';
                    });
                }
            });
        });
    </script>
    
{% endblock %}