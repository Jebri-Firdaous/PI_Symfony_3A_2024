{% extends 'Back/base.html.twig' %}

{# {% block sideBar %}
<nav id="sidebar" class="sidebar js-sidebar">
    <div class="sidebar-content js-simplebar">
        <a class="sidebar-brand" href="index.html">
  <span class="align-middle">AdminKit</span>
</a>

        <ul class="sidebar-nav">
            <li class="sidebar-header">
                Pages
            </li>

            <li class="sidebar-item">
                <a class="sidebar-link" href="index.html">
      <i class="align-middle" data-feather="sliders"></i> <span class="align-middle">Dashboard</span>
    </a>
            </li>

            <li class="sidebar-item active">
                <a class="sidebar-link" href="{{path('app_parkingB')}}">
      <i class="align-middle" data-feather="car"></i> <span class="align-middle">Parking</span>
    </a>
            </li>

            <li class="sidebar-item">
                <a class="sidebar-link" href="{{path('app_parking_stat')}}">
      <i class="align-middle" data-feather="stat"></i> <span class="align-middle">Statistic</span>
    </a>
            </li>

            <li class="sidebar-item">
                <a class="sidebar-link" href="{{path('app_parking_recy')}}">
      <i class="align-middle" data-feather="stat"></i> <span class="align-middle">Recycle</span>
    </a>
            </li>
            
        </ul>
    </div>
</nav>
{% endblock %} #}

{% block main %}


<style>

/* custom_pagination_styles.css */
.pagination {
    display: flex;
    justify-content: center;
    list-style: none;
    padding: 0;
}

.pagination li {
    margin: 0 5px;
}

.pagination li a {
    display: inline-block;
    padding: 5px 10px;
    text-decoration: none;
    border: 1px solid #ccc;
    border-radius: 5px;
    color: #333;
}

.pagination li.active a {
    background-color: #007bff;
    color: #fff;
    border-color: #007bff;
}

.pagination li.disabled a {
    pointer-events: none;
    background-color: #eee;
    color: #888;
    border-color: #ccc;
}

</style>


<div class="content">
<br> <h1>Liste Parking ( <a href="{{ path('app_parking_new') }}"><i class="fas fa-plus"></i></a> )</h1> <br>

<div style="display: grid; grid-template-columns: 1fr 1fr;">
    <!-- Add the radio button to toggle the visibility of the filter combo box -->
    {# <div>
        <input type="radio" id="toggleFilter1" name="filterVisibility" checked>
        <label for="toggleFilter1">Etat</label>
        <select id="etatFilter">
            <option value=""><----------></option>
            {% for etat in ['Libre', 'Reservée'] %}
                <option value="{{ etat }}">{{ etat }}</option>
            {% endfor %}
        </select>
    </div>

    <div>
        <input type="radio" id="toggleFilter2" name="filterVisibility">
        <label for="toggleFilter2">Type</label>
        <!-- Add the filter combo box -->
        <select id="typeFilter">
            <option value=""> <----------> </option>
            {% for etat in ['Voiture', 'Handicap', 'Camion'] %}
                <option value="{{ etat }}">{{ etat }}</option>
            {% endfor %}
        </select>
    </div> #}
</div>

    <table class="table" style="text-align: center;">
        <thead>
            <tr>
                {# <th>Id_parking</th> #}
                <th>Nom<button class="sort-button" data-sort-by="Nom" style="background:transparent; border-width:0px"><img src="{{asset('parking/img/parallel-arrow.png')}}" style="width:30px; border-radius: 10%;" /></button></th>
                <th>Address<button class="sort-button" data-sort-by="Address" style="background:transparent; border-width:0px"><img src="{{asset('parking/img/parallel-arrow.png')}}" style="width:30px; border-radius: 10%;" /></button></th>
                {# <th>Latitude</th>
                <th>Longitude</th> #}
                {# <th>NombrePlaceMax</th>
                <th>NombrePlaceOcc</th> #}
                <th>Nombre de plces libres<button class="sort-button" data-sort-by="Nombre" style="background:transparent; border-width:0px"><img src="{{asset('parking/img/parallel-arrow.png')}}" style="width:30px; border-radius: 10%;" /></button></th>
                <th>Etat<button class="sort-button" data-sort-by="Etat" style="background:transparent; border-width:0px"><img src="{{asset('parking/img/parallel-arrow.png')}}" style="width:30px; border-radius: 10%;" /></button></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        {% set listNom = [] %}
        {% for parking in pag %}
        {% set listNom = listNom|merge([parking.nomParking]) %}
            <tr>
                {# <td>{{ parking.idParking }}</td> #}
                <td>{{ parking.nomParking }}</td>
                <td>{{ parking.addressParking }}</td>
                {# <td>{{ parking.latitude }}</td>
                <td>{{ parking.longitude }}</td> #}
                {# <td>{{ parking.nombrePlaceMax }}</td>
                <td>{{ parking.nombrePlaceOcc }}</td> #}
                <td>{{ repo.nbPlaces(parking.idParking)-parking.nombrePlaceOcc }}</td>
                <td>{{ parking.etatParking }}</td>
                <td>
                    <a href="{{ path('app_parking_show', {'idParking': parking.idParking}) }}" class="btn btn-primary">détails</a>
                    {# <a href="{{ path('app_parking_edit', {'idParking': parking.idParking}) }}" class="btn btn-primary">edit</a>
                    {{ include('Back/parking/_delete_form.html.twig') }} #}
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="9">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <!-- Pagination -->
{# Display pagination controls #}
<style>
    .pagination {
    display: flex;
    justify-content: center;
    list-style: none;
    padding: 0;
}

.pagination li {
    margin: 0 5px;
}

.pagination li a {
    display: inline-block;
    padding: 5px 10px;
    text-decoration: none;
    border: 1px solid #ccc;
    border-radius: 5px;
    color: #333;
}

.pagination li.active a {
    background-color: #007bff;
    color: #fff;
    border-color: #007bff;
}

.pagination li.disabled a {
    pointer-events: none;
    background-color: #eee;
    color: #888;
    border-color: #ccc;
}
</style> 
<div class="d-flex justify-content-center">
       
      
    {{ knp_pagination_render(pag, 'pagination.html.twig') }}
</div>
</div>
    {# <a href="{{ path('app_parking_new') }}">Create new</a> #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sortButtons = document.querySelectorAll('.sort-button');
            const sortableList = document.querySelector('.table tbody');
            let ascendingOrder = true;

            sortButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const sortBy = this.dataset.sortBy;
                    const items = Array.from(sortableList.children);

                    items.sort((a, b) => {
                        const valueA = a.querySelector('td:nth-child(' + (['Nom', 'Address', 'Nombre', 'Etat'].indexOf(sortBy) + 1) + ')').textContent;
                        const valueB = b.querySelector('td:nth-child(' + (['Nom', 'Address', 'Nombre', 'Etat'].indexOf(sortBy) + 1) + ')').textContent;

                        if (ascendingOrder) {
                            return valueA.localeCompare(valueB);
                        } else {
                            return valueB.localeCompare(valueA);
                        }
                    });

                    ascendingOrder = !ascendingOrder;

                    // Remove existing items
                    while (sortableList.firstChild) {
                        sortableList.removeChild(sortableList.firstChild);
                    }

                    // Append sorted items
                    items.forEach(item => sortableList.appendChild(item));
                });
            });
            
            // Filter combo box event listener
            const etatFilter = document.getElementById('etatFilter');
            etatFilter.addEventListener('change', function() {
                const selectedEtat = this.value;
                const rows = document.querySelectorAll('.table tbody tr');

                rows.forEach(row => {
                    const etat = row.querySelector('td:nth-child(3)').textContent;
                    if (!selectedEtat || etat === selectedEtat) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
            
            // Filter combo box event listener
            const typeFilter = document.getElementById('typeFilter');
            typeFilter.addEventListener('change', function() {
                const selectedType = this.value;
                const rows = document.querySelectorAll('.table tbody tr');

                rows.forEach(row => {
                    const type = row.querySelector('td:nth-child(2)').textContent;
                    if (!selectedType || type === selectedType) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
                
            const toggleFilter1 = document.getElementById('toggleFilter1');
            const toggleFilter2 = document.getElementById('toggleFilter2');
            const rows = document.querySelectorAll('.table tbody tr');

            // Initially hide the combo box
            // etatFilter.style.display = 'none';
            typeFilter.style.display = 'none';

            // Toggle visibility of the combo box when the radio button is clicked
            toggleFilter1.addEventListener('change', function() {
                if (this.checked) {
                    // toggleFilter.checked = false;
                    etatFilter.style.display = '';
                    typeFilter.style.display = 'none';
                    etatFilter.selectedIndex = 0;
                    rows.forEach(row => {
                        row.style.display = '';
                    });
                }
            });
            toggleFilter2.addEventListener('change', function() {
                if (this.checked) {
                    // toggleFilter.checked = false;
                    typeFilter.style.display = '';
                    etatFilter.style.display = 'none';
                    typeFilter.selectedIndex = 0;
                    rows.forEach(row => {
                        row.style.display = '';
                    });
                }
            });
        });
    </script>
    


{% endblock %}