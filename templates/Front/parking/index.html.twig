{% extends 'Front/base.html.twig' %}

{% block css1 %}
  <meta charset="utf-8">
        <title>Fruitables - Vegetable Website Template</title>
        <meta content="width=device-width, initial-scale=1.0" name="viewport">
        <meta content="" name="keywords">
        <meta content="" name="description">

        <!-- Google Web Fonts -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Raleway:wght@600;800&display=swap" rel="stylesheet"> 

        <!-- Icon Font Stylesheet -->
        <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"/>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">
<!-- Libraries Stylesheet -->
<link href="{{asset('parking/lib/lightbox/css/lightbox.min.css')}}" rel="stylesheet">
<link href="{{asset('parking/lib/owlcarousel/assets/owl.carousel.min.css')}}" rel="stylesheet">


<!-- Customized Bootstrap Stylesheet -->
<link href="{{asset('parking/css/bootstrap.min.css')}}" rel="stylesheet">

<!-- Template Stylesheet -->
<link href="{{asset('parking/css/style.css')}}" rel="stylesheet">

<!--  MAP -->>
<style>
      #map {
        position: relative;
        /* top: 0;
        bottom: 0;
        right: 0;
        left: 0; */
        font-family: Arial, Helvetica, sans-serif;
        font-size: 14px;
        color: #323232;
      }
    </style>
    <!-- Load Leaflet from CDN -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" crossorigin=""></script>

    <!-- Load Esri Leaflet from CDN -->
    <script src="https://unpkg.com/esri-leaflet@3.0.12/dist/esri-leaflet.js"></script>
    <script src="https://unpkg.com/esri-leaflet-vector@4.2.3/dist/esri-leaflet-vector.js"></script>
{% endblock %}

{% block section2 %}
<!-- Vesitable Shop Start-->
<div class="container-fluid vesitable py-5">
    <div class="container py-5">
        <h1 class="mb-0">Liste des Parkings</h1>
        <div class="owl-carousel vegetable-carousel justify-content-center" style="border-color: aqua;">
        {% for p in parkings %}
            <div  id="div{{p.getIdParking}}v2" class="border border-primary rounded position-relative vesitable-item">
                {% if p.getNombrePlaceOcc() - repo.nbPlaces(p.getIdParking()) == 0  %}
                <div class="text-white px-3 py-1 rounded position-absolute" style="background-color: rgb(200, 21, 21); top: 10px; right: 10px;">Plein</div>
                {% else %}
                <div hidden class="text-white px-3 py-1 rounded position-absolute" style="background-color: rgb(200, 21, 21); top: 10px; right: 10px;">Plein</div>
                {% endif %}
                <div class="p-4 rounded-bottom">
                    <h4>{{ p.getNomParking() }}</h4>
                    <h4>&emsp;Parking</h4>
                    <br>
                    <div class="d-flex justify-content-between flex-lg-wrap position-absolute" style="bottom: 10px; right: 10px">
                        <button id="info{{p.getIdParking}}" class="btn border border-secondary rounded-pill px-3" ><i class="fa fa-map me-2 " style="color: blue"></i> Info</button>
                    </div>
                </div>
            </div>
        {% endfor %}
        </div>
        {% set parkingIds = [] %}
        {% set parkinglong = [] %}
        {% set parkinglat = [] %}
        {% for p in parkings %}
            {% set parkingIds = parkingIds|merge([p.getIdParking()]) %}
            {% set parkinglong = parkinglong|merge([p.getLongitude()]) %}
            {% set parkinglat = parkinglat|merge([p.getLatitude()]) %}
            <div id="div{{p.getIdParking}}" style="display: none; grid-template-columns: 1fr 1fr; gap: 20px;" class="border border-primary rounded position-relative">
                <div class="p-4 rounded-bottom" style="padding: 10px;">
                    <h4>{{ p.getNomParking() }} Parking</h4>
                    {# <h4>&emsp;Parking</h4> #}
                    <table class="table">
                        <tbody>
                            {# <tr>
                                <th>ID</th>
                                <td>{{ parking.idParking }}</td>
                            </tr> #}
                            <tr>
                                <th>Nom</th>
                                <td>{{ p.nomParking }}</td>
                            </tr>
                            <tr>
                                <th>Address</th>
                                <td>{{ p.addressParking }}</td>
                            </tr>
                            {# <tr>
                                <th>Latitude</th>
                                <td>{{ parking.latitude }}</td>
                            </tr>
                            <tr>
                                <th>Longitude</th>
                                <td>{{ parking.longitude }}</td>
                            </tr> #}
                            {# <tr>
                                <th>Nombre de Place Max</th>
                                <td>{{ parking.nombrePlaceMax }}</td>
                            </tr>
                            <tr>
                                <th>Nombre de Place Occup√©es</th>
                                <td>{{ parking.nombrePlaceOcc }}</td>
                            </tr> #}
                            <tr>
                                <th>Nombre de place libres</th>
                                <td>{{ repo.nbPlaces(p.idParking)-p.nombrePlaceOcc }}</td>
                            </tr>
                            <tr>
                                <th>Etat</th>
                                <td>{{ p.etatParking }}</td>
                            </tr>
                        </tbody>
                    </table>
                    <a href="{{path('app_place_indexF', {idP: p.getIdParking()})}}" class="btn border border-secondary rounded-pill px-3" >Liste Places</a>
                    <br>
                </div>
                <div id="map{{p.getIdParking}}" style="padding: 10px; width:650px; height:300px "></div>
            </div>
        {% endfor %}
    </div>
</div>

<!-- Vesitable Shop End -->
<!-- JavaScript Libraries -->
    <script src="{{asset('https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js')}}"></script>
    <script src="{{asset('https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js')}}"></script>
    <script src="{{asset('parking/lib/easing/easing.min.js')}}"></script>
    <script src="{{asset('parking/lib/waypoints/waypoints.min.js')}}"></script>
    <script src="{{asset('parking/lib/lightbox/js/lightbox.min.js')}}"></script>
    <script src="{{asset('parking/lib/owlcarousel/owl.carousel.js')}}"></script>
    
    <!-- Template Javascript -->
    <script src="{{asset('parking/js/main.js')}}"></script>
    <script>
        var ids= {{ parkingIds|json_encode|raw }} ;
        var long= {{ parkinglong|json_encode|raw }} ;
        var lat= {{ parkinglat|json_encode|raw }} ;
        // var idstri= {{ repo|json_encode|raw }} ;
        for (let i=0; i < ids.length ; i++) {
            document.getElementById('info'.concat(ids[i])).addEventListener('click', function() {
            for (let j=0; j < ids.length ; j++) {
                document.getElementById('div'.concat(ids[j])).style.display = 'none';
                // document.getElementById('div'.concat(ids[j]).concat('v2')).style.display = 'none';
            }
            document.getElementById('div'.concat(ids[i])).style.display = 'grid';
            });
        }
        for (let i=0; i < ids.length ; i++) {
        const map = L.map("map".concat(ids[i]), {
        minZoom: 2
        })

        map.setView([long[i], lat[i]], 13);
        const apiKey = "AAPK35cf4b021e7a4c019b63243490179ac2jBL4IBgUxMIrLCpGR5HmtaB-FMYQ85qBAkLF6T5MDlW9AIDXn06SI6mVpyKvGmuy";

        const basemapEnum = "arcgis/navigation";

      L.esri.Vector.vectorBasemapLayer(basemapEnum, {
        apiKey: apiKey
      }).addTo(map);
    //   var marker = L.marker([lat[i], lng[j]]).addTo(map);
    //   marker.bindPopup("This is a ping!").openPopup();
    }
    </script>
    
{% endblock %}